// <auto-generated />
using System;
using GrainRestaurants.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GrainRestaurants.Infrastructure.Migrations
{
    [DbContext(typeof(GrainRestaurantDBContext))]
    [Migration("20210826133949_SeedsDish")]
    partial class SeedsDish
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AdditionalInfo = "",
                            City = "Uberaba",
                            District = "Santa Maria",
                            Location = "Av Pedro Salomao",
                            Number = "44",
                            PostalCode = "38050-490",
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 2L,
                            AdditionalInfo = "",
                            City = "Uberaba",
                            District = "Centro",
                            Location = "Av Santos Dumont",
                            Number = "10",
                            PostalCode = "38010-370",
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 3L,
                            AdditionalInfo = "",
                            City = "Uberaba",
                            District = "Olinda",
                            Location = "Rua Jonas de Carvalho",
                            Number = "55",
                            PostalCode = "38055-440",
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 4L,
                            AdditionalInfo = "",
                            City = "Uberaba",
                            District = "Estados Unidos",
                            Location = "Avenida Quinze de Novembro",
                            Number = "515",
                            PostalCode = "38015-305",
                            Uf = "MG"
                        });
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Dish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<long>("RestaurantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("Name", "RestaurantId")
                        .IsUnique();

                    b.ToTable("Dish");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(643),
                            Description = "Frango empanado e dourado com molho suave e cremoso, acompanhado de alface fresquinho, fatias de bacon crocante num pão com gergelim, acompanhamento e bebida.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_medium/pratos/1a003463-20d8-4744-841a-6ac212a66c4b/202108101448_P6S1_f.png",
                            Name = "Mc Oferta McChicken Bacon",
                            Price = 29.899999999999999,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9872),
                            Description = "Frango empanado e dourado com o delicioso molho barbecue, cebola fresca, bacon crocante, fatia de queijo cheddar num pão com gergelim, acompanhamento e bebida. Consulte informações nutricionais do refrigerante 400ml em: mcdonalds.com.br/cardapio/bebidas. Não utilize o campo de observações, as alterações devem ser realizadas no pedido.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/1a003463-20d8-4744-841a-6ac212a66c4b/202108101452_10TW_f.png",
                            Name = "McOferta McChicken Barbecue",
                            Price = 28.899999999999999,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9890),
                            Description = "Frango empanado e dourado com o maravilhoso molho cheddar McMelt, cebola shoyo num pão com gergelim, acompanhamento e bebida. Consulte informações nutricionais do refrigerante 400ml em: mcdonalds.com.br/cardapio/bebidas. Não utilize o campo de observações, as alterações devem ser realizadas no pedido.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_medium/pratos/1a003463-20d8-4744-841a-6ac212a66c4b/202108101448_P6S1_f.png",
                            Name = "Mc Oferta McChicken Cheddar",
                            Price = 23.899999999999999,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9892),
                            Description = "O maior sanduíche de carne 100% bovina do mcdonald’s agora também com creme de muçarela, 2 deliciosas fatias de queijo cheddar e emental, tomate, alface, cebola e o delicioso molho tasty. Mais acompanhamento e bebida em sua McOferta.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/6306ea52-09eb-4439-97b4-5d353742d884/202003101215_YD7v_1.png",
                            Name = "McOferta Big Tasty turbo queijo",
                            Price = 41.899999999999999,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9894),
                            Description = "Um delicioso hambúrguer feito com picanha, 4 fatias crocantes de bacon, nosso cremoso cheddar, cebola crispy e pão com gergelim.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202011121100_ecUL_f.png",
                            Name = "McOferta mcpicanha cheddar bacon",
                            Price = 43.899999999999999,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9899),
                            Description = "A novidade com Kitkat chega para gerar momentos deliciosos... Venha dar um Break com Kitkat e Mcdonald's! Calda de Chocolate!",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202108101052_1OO2_i.jpg",
                            Name = "McFlurry Kit Kat Chocolate",
                            Price = 13.9,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9900),
                            Description = "A novidade com Kitkat chega para gerar momentos deliciosos... Venha dar um Break com Kitkat e Mcdonald's! Calda de Morango!",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202108101052_18NX_i.jpg",
                            Name = "McFlurry Kitkat Morango",
                            Price = 13.9,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9904),
                            Description = "Uma delícia gelada sabor baunilha, uma supercamada de cobertura de chocolate, caramelo ou morango e ainda por cima com farofa de paçoca.O canudo completa a tentação.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202005311428_3fyS_2.jpg",
                            Name = "Top sunadae de morango",
                            Price = 13.9,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9906),
                            Description = "O novo McShake é feito com leite e batido na hora. Você pode escolher nos sabores Ovomaltine , Chocolate Kopenhagen ou morango.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202107211616_JD81_i.jpg",
                            Name = "McShake Morango",
                            Price = 15.9,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9909),
                            Description = "O novo McShake é feito com leite e batido na hora. Você pode escolher nos sabores Ovomaltine , Chocolate Kopenhagen ou morango.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3ec68ed2-db26-4613-827f-ddcdd4777f76/202108031953_6NW0_i.jpg",
                            Name = "McShake chocolate Kopenhagen",
                            Price = 15.9,
                            RestaurantId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9955),
                            Description = "Aproveite a promoção pra levar as bib’sfihas mais amadas do brasil: 4 Bib’sfihas Clássicas: Carne, Frango ou Calabresa.com Mussarela",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202106301908_6MWF_.jpeg",
                            Name = "4 Bib'sfihas Clássicas",
                            Price = 8.9900000000000002,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9958),
                            Description = "Aproveite a promoção pra levar as bib’sfihas mais amadas do brasil: 10 Bib’sfihas Clássicas: Carne, Frango ou Calabresa com Mussarela + 10 Baby Churros de Doce de Leite argentino.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202106071735_75H5_.jpeg",
                            Name = "10 Bib'sfihas Clássicas + 10 Baby Churros",
                            Price = 25.899999999999999,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9961),
                            Description = "Aproveite a promoção pra levar as bib’sfihas mais amadas do brasil: 10 Bib’sfihas Clássicas: Carne, Frango ou Calabresa com Mussarela",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202106071716_6D06_.jpeg",
                            Name = "10 Bib'sfihas Clássicas",
                            Price = 19.899999999999999,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9962),
                            Description = "Recheado com doce de leite argentino, apaixonante. Peça já!",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202106071710_P5W8_.jpeg",
                            Name = "10 Baby Churros de Doce de Leite",
                            Price = 6.9000000000000004,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9965),
                            Description = "Massa folhada crocante coberta de chocolate com avelã cremoso. Aproveite",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202102181841_PWs0_.jpeg",
                            Name = "3 Esfihas folhadas de Chocolate",
                            Price = 4.9900000000000002,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9967),
                            Description = "Aproveite a promoção para levar as bib’sfihas mais amadas do brasil: carne, calabresa com mussarela, frango, italianinha, carne com mussarela, frango com cremely e/ou queijo.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202104011033_Dmia_.jpeg",
                            Name = "5 Bib’sfihas Clássicas ou Especiais",
                            Price = 4.9900000000000002,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9969),
                            Description = "Aproveite a promoção para levar as bib’sfihas mais pedidas do brasil: carne, calabresa com mussarela e/ou frango.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/65c38aa8-b094-413d-9a80-ddc256bfcc78/202104011034_C242_.jpeg",
                            Name = "7 Bib’sfihas Clássicas",
                            Price = 4.9900000000000002,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9972),
                            Description = "A bib’sfiha mais vendida do brasil. Um verdadeiro clássico do Habib’s.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/cfa08fd6-f079-4ef5-a49f-4d2e8afe3f79/202103141901_esVr_.jpeg",
                            Name = "Bib’sfiha de calabresa com mussarela",
                            Price = 2.2799999999999998,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9973),
                            Description = "Recheio de frango desfiado temperado, tomate, cebola.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/8802d01a-e149-4ec7-b746-938852a07ce7/202105201817_A3HC_.jpeg",
                            Name = "Bib'sfiha de Frango",
                            Price = 2.2799999999999998,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9975),
                            Description = "Aquela clássica que vai bem em todos os momentos",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/cfa08fd6-f079-4ef5-a49f-4d2e8afe3f79/202103141901_k77P_.jpeg",
                            Name = "Bib’sfiha de carne com mussarela",
                            Price = 2.2799999999999998,
                            RestaurantId = 2L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9976),
                            Description = "Spaghetti, azeite de oliva extra virgem, alho.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202102021053_aAT3_.jpeg",
                            Name = "Alho e Óleo Simprão",
                            Price = 22.010000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9979),
                            Description = "Spaghetti, azeite de oliva extra virgem, alho, brócolis e cenoura",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202102091147_V33s_.jpeg",
                            Name = "Alho e Óleo Veg",
                            Price = 25.510000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9981),
                            Description = "Spaghetti, azeite de oliva extra virgem, bacon e azeitona",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202009280838_86GA_n.jpg",
                            Name = "Alho e óleo",
                            Price = 26.010000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9984),
                            Description = "Spaghetti, azeite de oliva extra virgem, manjericão, alho queijo ralado e nozes.",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202102021048_XAkS_.jpeg",
                            Name = "Ao Molho Pesto",
                            Price = 27.510000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9985),
                            Description = "Spaghetti, bacon, molho branco, frango desfiado, Catupiry, mussarela temperada e queijo ralado",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202010230859_ld1z_.jpeg",
                            Name = "Ao molho branco",
                            Price = 30.010000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9987),
                            Description = "Spaghetti, bacon, calabresa, molho de tomate, molho branco, queijo ralado, mussarela temperada, Catupiry e azeitona",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202010191304_An9n_.jpeg",
                            Name = "Calabresa",
                            Price = 32.009999999999998,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9988),
                            Description = "Spaghetti, molho de tomate, Catupiry, bacon, frango desfiado e queijo ralado",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202010230858_nQId_.jpeg",
                            Name = "Frango com Catupiry",
                            Price = 29.010000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9990),
                            Description = "Spaghetti, bacon, molho de tomate, frango desfiado, Catupiry, champignon, tomate verde, mussarela temperada, tomate seco e queijo ralado",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202009280836_gber_n.jpg",
                            Name = "Mutante",
                            Price = 35.009999999999998,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9992),
                            Description = "Spaghetti, molho de tomate, Catupiry, mussarela temperada, queijo ralado, milho verde, batata palha, bacon e salsicha",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202010191304_a3vc_.jpeg",
                            Name = "Spaguetti hot dog",
                            Price = 31.010000000000002,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9993),
                            Description = "Spaghetti, bacon, molho de tomate, molho branco, presunto, Catupiry, queijo ralado, mussarela temperada, palmito, azeitona e orégano",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202010191303_DMpr_.jpeg",
                            Name = "Spaguetti pizza",
                            Price = 33.009999999999998,
                            RestaurantId = 3L
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9995),
                            Description = "1000 ml faça o melhor açaí da cidade no pote ( são 500 ml + 500 ml ) com ate 9 adicionais !!!!!",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/f9ea38f4-c7db-4525-b92d-1798e0629aa4/202106151232_AQHU_i.jpg",
                            Name = "1000 ml !!! Faça o melhor açai no pote !!!!",
                            Price = 41.799999999999997,
                            RestaurantId = 4L
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9997),
                            Description = "Delicioso Açai \"Los Shakes\"",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/f9ea38f4-c7db-4525-b92d-1798e0629aa4/202106151235_MIN2_i.jpg",
                            Name = "Açaí trifásico",
                            Price = 15.5,
                            RestaurantId = 4L
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 769, DateTimeKind.Local).AddTicks(9998),
                            Description = "Granola, leite Ninho, Morango , banana & leite condensado",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/f9ea38f4-c7db-4525-b92d-1798e0629aa4/202106151237_IBB3_i.jpg",
                            Name = "Açai Gold",
                            Price = 14.0,
                            RestaurantId = 4L
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 770, DateTimeKind.Local).AddTicks(1),
                            Description = "Banana & Morango",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/f9ea38f4-c7db-4525-b92d-1798e0629aa4/202106151228_Q5L8_i.jpg",
                            Name = "Açai Light",
                            Price = 15.0,
                            RestaurantId = 4L
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 770, DateTimeKind.Local).AddTicks(2),
                            Description = "Diamante negro & morango",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_low/pratos/f9ea38f4-c7db-4525-b92d-1798e0629aa4/202106151229_1NUU_i.jpg",
                            Name = "Açai Sensação",
                            Price = 14.0,
                            RestaurantId = 4L
                        });
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Password", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Password");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Restaurant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FederalDocument")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RestaurantTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Resume")
                        .HasColumnType("text");

                    b.Property<double>("Score")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("FederalDocument")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RestaurantTypeId");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressId = 1L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 777, DateTimeKind.Local).AddTicks(3961),
                            FederalDocument = "01631311000464",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_thumbnail/logosgde/201901041513_3ec68ed2-db26-4613-827f-ddcdd4777f76.jpg",
                            IsOpen = true,
                            Name = "Mcdonald's",
                            Phone = "33333333",
                            RestaurantTypeId = 7L,
                            Resume = "Líder no segmento de serviço rápido de alimentação, o McDonalds se destaca pela qualidade dos produtos e do atendimento. Sempre temos uma Mc Oferta especial (promoção) de Hamburguer, lanches, sanduíche, batata e sorvete. Aproveite!",
                            Score = 4.7000000000000002
                        },
                        new
                        {
                            Id = 2L,
                            AddressId = 2L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 777, DateTimeKind.Local).AddTicks(4883),
                            FederalDocument = "03640022000104",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_high/logosgde/b3e531ca-e1ff-4767-9868-edde3d624366/202103031204_JOYV_i.jpg",
                            IsOpen = true,
                            Name = "Habib's",
                            Phone = "33333333",
                            RestaurantTypeId = 1L,
                            Resume = "O Habib’s é a maior rede de restaurantes do mundo de comida árabe. Delícias como a exclusiva esfiha, kibe, beirute, pastel, pizzas, bolinho de bacalhau e sobremesas como sorvetes, pastel de belém, pudim e refrigerantes e sucos completam seu pedido",
                            Score = 4.4000000000000004
                        },
                        new
                        {
                            Id = 3L,
                            AddressId = 3L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 777, DateTimeKind.Local).AddTicks(4889),
                            FederalDocument = "10504193000171",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_high/logosgde/3fb30be0-33de-4ac9-a7af-a3434bea1f7d/202101301033_SQbY_i.png",
                            IsOpen = true,
                            Name = "Macarrão e Cia",
                            Phone = "33333333",
                            RestaurantTypeId = 4L,
                            Resume = "Macarrão e CIA começa em 2005 quando o adquirimos numa oportunidade de negócio. Inicialmente havia um pequeno carro de cachorro quente e uma chapa, localizado na Praça Pôr do Sol em Uberaba.Em janeiro de 2010 seguimos a expansão e abrimos o serviço de \"delivery\".",
                            Score = 4.5
                        },
                        new
                        {
                            Id = 4L,
                            AddressId = 4L,
                            CreatedAt = new DateTime(2021, 8, 26, 10, 39, 48, 777, DateTimeKind.Local).AddTicks(4891),
                            FederalDocument = "26187594000185",
                            ImageUrl = "https://static-images.ifood.com.br/image/upload/t_high/logosgde/f9ea38f4-c7db-4525-b92d-1798e0629aa4/201909101527_hhaI_.jpeg",
                            IsOpen = true,
                            Name = "Los Shakes",
                            Phone = "33333333",
                            RestaurantTypeId = 8L,
                            Resume = "Deliciosa linha de Sorvetes , Milkshakes , Açaí e Açaí Zero Açúcar !!!!! Venha saborear o verdadeiro sabor do Açaí.",
                            Score = 4.9000000000000004
                        });
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.RestaurantType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RestaurantType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Árabe"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Oriental"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Brasileira"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Italiana"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Lanche"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Pizzaria"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Fast Food"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Sorveteria"
                        });
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Dish", b =>
                {
                    b.HasOne("GrainRestaurants.Core.Entities.Restaurant", "Restaurant")
                        .WithMany("Menu")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Password", b =>
                {
                    b.HasOne("GrainRestaurants.Core.Entities.User", "User")
                        .WithMany("Passwords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Restaurant", b =>
                {
                    b.HasOne("GrainRestaurants.Core.Entities.Address", "Address")
                        .WithMany("Restaurants")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainRestaurants.Core.Entities.RestaurantType", "Type")
                        .WithMany("Restaurant")
                        .HasForeignKey("RestaurantTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Address", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.Restaurant", b =>
                {
                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.RestaurantType", b =>
                {
                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("GrainRestaurants.Core.Entities.User", b =>
                {
                    b.Navigation("Passwords");
                });
#pragma warning restore 612, 618
        }
    }
}
